# AUTO-GENERATED. DON'T MODIFY IT!
# This conf file will contain base searches for this ITSI module.
[DA-ITSI-TELEGRAF-OS_Performance.Network_win]
alert_lag = 30
alert_period = 1
base_search = | mstats avg(_value) as value where `telegraf_index` `def_itsi_telegraf_net_win` by metric_name, host, instance span=1s\
| eval {metric_name}=value\
| stats first(win_net.*) as "*" by _time, host, instance\
| eval network_traffic=((Bytes_Received_persec+Bytes_Sent_persec)/1024), network_errors=(Packets_Received_Errors+Packets_Outbound_Errors)\
| stats avg(network_traffic) as network_traffic, sum(network_errors) as network_errors by _time, host\
| fields _time, host, network_traffic, network_errors
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "network_errors", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "network_errors", \
        "title": "network_errors", \
        "unit": "#"\
    }, \
    {\
        "_key": "network_traffic", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "network_traffic", \
        "title": "network_traffic", \
        "unit": "kbps"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Network_win

[DA-ITSI-TELEGRAF-OS_Performance.Memory_win]
alert_lag = 30
alert_period = 1
base_search = | mstats avg(_value) as value where `telegraf_index` metric_name=win_mem.Available_Bytes OR metric_name=win_mem.Committed_Bytes OR metric_name=win_mem.Pages_persec by metric_name, host span=1s\
| eval {metric_name}=value\
| stats first(win_mem.*) as "*" by _time, host\
| foreach *_Bytes [ eval <<FIELD>> = round('<<FIELD>>'/1048567, 2) ]\
| fields _time, host, Available_Bytes, Committed_Bytes, Pages_persec
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "Available_Bytes", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Available_Bytes", \
        "title": "Available_Bytes", \
        "unit": "MB"\
    }, \
    {\
        "_key": "Committed_Bytes", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Committed_Bytes", \
        "title": "Committed_Bytes", \
        "unit": "MB"\
    }, \
    {\
        "_key": "Pages_persec", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Pages_persec", \
        "title": "Pages_persec", \
        "unit": "pages/s"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Memory_win

[DA-ITSI-TELEGRAF-OS_Performance.Storage_win]
alert_lag = 30
alert_period = 1
base_search = | mstats avg(_value) as value where `telegraf_index` metric_name=win_diskio.Current_Disk_Queue_Length\
OR metric_name=win_diskio.Disk_Read_Bytes_persec\
OR metric_name=win_diskio.Disk_Reads_persec\
OR metric_name=win_diskio.Disk_Write_Bytes_persec\
OR metric_name=win_diskio.Disk_Writes_persec\
OR metric_name=win_diskio.Percent_Disk_Read_Time\
OR metric_name=win_diskio.Percent_Disk_Time\
OR metric_name=win_diskio.Percent_Disk_Write_Time by metric_name, host span=1s\
| eval {metric_name}=value\
| stats first(win_diskio.*) as "*" by host, _time\
| eval Disk_Write_Bytes_persec=(Disk_Write_Bytes_persec/10000000), Disk_Read_Bytes_persec=(Disk_Read_Bytes_persec/10000000)\
| fields _time, host, Current_Disk_Queue_Length, Disk_Read_Bytes_persec, Disk_Reads_persec, Disk_Write_Bytes_persec, Disk_Writes_persec, Percent_Disk_Read_Time, Percent_Disk_Time, Percent_Disk_Write_Time
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "Current_Disk_Queue_Length", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Current_Disk_Queue_Length", \
        "title": "Current_Disk_Queue_Length", \
        "unit": "#"\
    }, \
    {\
        "_key": "Disk_Read_Bytes_persec", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Disk_Read_Bytes_persec", \
        "title": "Disk_Read_Bytes_persec", \
        "unit": "MB/s"\
    }, \
    {\
        "_key": "Disk_Reads_persec", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Disk_Reads_persec", \
        "title": "Disk_Reads_persec", \
        "unit": "ms"\
    }, \
    {\
        "_key": "Disk_Write_Bytes_persec", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Disk_Write_Bytes_persec", \
        "title": "Disk_Write_Bytes_persec", \
        "unit": "MB/s"\
    }, \
    {\
        "_key": "Disk_Writes_persec", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Disk_Writes_persec", \
        "title": "Disk_Writes_persec", \
        "unit": "ms"\
    }, \
    {\
        "_key": "Percent_Disk_Read_Time", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Percent_Disk_Read_Time", \
        "title": "Percent_Disk_Read_Time", \
        "unit": "%"\
    }, \
    {\
        "_key": "Percent_Disk_Time", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Percent_Disk_Time", \
        "title": "Percent_Disk_Time", \
        "unit": "%"\
    }, \
    {\
        "_key": "Percent_Disk_Write_Time", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Percent_Disk_Write_Time", \
        "title": "Percent_Disk_Write_Time", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Storage_win

[DA-ITSI-TELEGRAF-OS_Performance.Memory]
alert_lag = 30
alert_period = 1
base_search = | mstats avg(_value) as value where `telegraf_index` metric_name=mem.total OR metric_name=mem.used_percent OR metric_name=mem.buffered OR metric_name=mem.cached OR metric_name=swap.used_percent OR metric_name=swap.cached OR metric_name=win_swap.Percent_Usage by metric_name, host span=1s\
| eval {metric_name}=value\
| stats first(mem.*) as "mem_*", first(swap.*) as "swap_*", first(win_swap.*) as "win_swap_*" by _time, host\
| eval mem_free_percent=(100-mem_used_percent), swap_free_percent=(100-swap_used_percent), mem_buffered_percent=(mem_buffered/mem_total)*100, mem_cached_percent=(mem_cached/mem_total)*100\
| foreach mem_*, swap_* [ eval <<FIELD>> = round(<<FIELD>>, 2) ]\
| eval swap_used_percent=case(isnum(swap_used_percent), swap_used_percent, isnum(win_swap_Percent_Usage), win_swap_Percent_Usage), swap_free_percent=case(isnum(swap_free_percent), swap_free_percent, isnum(win_swap_Percent_Usage), 100-win_swap_Percent_Usage)\
| fields _time, host, mem_used_percent, mem_free_percent, mem_cached_percent, mem_buffered_percent, swap_used_percent, swap_free_percent
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "mem_free_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "mem_free_percent", \
        "title": "mem_free_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "mem_used_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "mem_used_percent", \
        "title": "mem_used_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "swap_free_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "swap_free_percent", \
        "title": "swap_free_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "swap_used_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "swap_used_percent", \
        "title": "swap_used_percent", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Memory

[DA-ITSI-TELEGRAF-OS_Performance.CPU_win]
alert_lag = 30
alert_period = 1
base_search = | mstats avg(_value) as value where `telegraf_index` metric_name="win_cpu.Percent_DPC_Time" OR metric_name="win_cpu.Percent_Idle_Time" OR metric_name="win_cpu.Percent_Interrupt_Time" OR metric_name="win_cpu.Percent_Privileged_Time" OR metric_name="win_cpu.Percent_Processor_Time" OR metric_name="win_cpu.Percent_User_Time" instance=_Total by metric_name, host span=1s\
| eval {metric_name}=value\
| stats first(win_cpu.*_Time) as "*" by _time, host\
| eval Percent_load=100-Percent_Idle\
| foreach Percent_* [ eval <<FIELD>> = round('<<FIELD>>', 2) ]
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "Percent_load", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Percent_load", \
        "title": "Percent_load", \
        "unit": "%"\
    }, \
    {\
        "_key": "Percent_Idle", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Percent_Idle", \
        "title": "Percent_Idle", \
        "unit": "%"\
    }, \
    {\
        "_key": "Percent_User", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "Percent_User", \
        "title": "Percent_User", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.CPU_win

[DA-ITSI-TELEGRAF-OS_Performance.Network]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where `telegraf_index` `def_itsi_telegraf_net` by metric_name, host, interface span=1s\
| eval {metric_name}=value\
| stats first(net.*) as "*_counter" by _time, host, interface\
| streamstats current=f last(*_counter) as "*_prev" by host, interface\
| eval inbound=((bytes_recv_counter-bytes_recv_prev)/1024), outbound=((bytes_sent_counter-bytes_sent_prev)/1024), inbound_errors=(err_in_counter-err_in_prev), outbound_errors=(err_out_counter-err_out_prev)\
| where NOT (inbound<0) AND NOT (outbound<0) AND NOT (inbound_errors<0) AND NOT (outbound_errors<0)\
| fillnull value=0 inbound, outbound, inbound_errors, outbound_errors\
| eval network_traffic=(inbound+outbound), network_errors=(inbound_errors+outbound_errors)\
| stats avg(network_traffic) as network_traffic, sum(network_errors) as network_errors by _time, host\
| fields _time, host, network_traffic, network_errors
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "network_errors", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "network_errors", \
        "title": "network_errors", \
        "unit": "#"\
    }, \
    {\
        "_key": "network_traffic", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "network_traffic", \
        "title": "network_traffic", \
        "unit": "kbps"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Network

[DA-ITSI-TELEGRAF-OS_Performance.CPU]
alert_lag = 30
alert_period = 1
base_search = | mstats avg(_value) as value where `telegraf_index` metric_name=cpu.usage_iowait OR metric_name=cpu.usage_steel OR metric_name=cpu.usage_system OR metric_name=cpu.usage_user OR metric_name=cpu.usage_idle by host metric_name span=1s\
| eval {metric_name}=value\
| stats first(cpu.*) as "*" by _time, host\
| rename usage_iowait as wait_load_percent, usage_steel as steal_load_percent, usage_system as sys_load_percent, usage_user as user_load_percent, usage_idle as idle_load_percent\
| fillnull value=0 wait_load_percent,sys_load_percent,user_load_percent,steal_load_percent\
| eval cpu_load_percent=(wait_load_percent+sys_load_percent+user_load_percent+steal_load_percent)\
| foreach *_load_percent [ eval <<FIELD>> = round(<<FIELD>>, 2) ]\
| fields _time,host,cpu_load_percent,idle_load_percent,steal_load_percent,sys_load_percent,user_load_percent,wait_load_percent
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "cpu_load_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "cpu_load_percent", \
        "title": "cpu_load_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "idle_load_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "idle_load_percent", \
        "title": "idle_load_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "sys_load_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "sys_load_percent", \
        "title": "sys_load_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "user_load_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "user_load_percent", \
        "title": "user_load_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "steal_load_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "steal_load_percent", \
        "title": "steal_load_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "wait_load_percent", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "wait_load_percent", \
        "title": "wait_load_percent", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.CPU

[DA-ITSI-TELEGRAF-OS_Performance.Storage.usage]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where `telegraf_index` metric_name=disk.used_percent OR metric_name=disk.inodes_used OR metric_name=disk.inodes_total `devices_exclusions` by metric_name, host, path span=1s\
| eval {metric_name}=value\
| stats first(disk.*) as "disk_*" by _time, host, path\
| eval disk_inodes_used_percent=(disk_inodes_used/disk_inodes_total)*100\
| foreach disk_used_percent, disk_inodes_used_percent [ eval <<FIELD>> = round('<<FIELD>>', 2) ]\
| fields _time, host, path, disk_used_percent, disk_inodes_used_percent
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "disk_used_percent", \
        "aggregate_statop": "max", \
        "entity_statop": "max", \
        "threshold_field": "disk_used_percent", \
        "title": "disk_used_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "disk_inodes_used_percent", \
        "aggregate_statop": "max", \
        "entity_statop": "max", \
        "threshold_field": "disk_inodes_used_percent", \
        "title": "disk_inodes_used_percent", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Storage.usage

[DA-ITSI-TELEGRAF-OS_Performance.Storage_win.usage]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as disk_free_percent where `telegraf_index` metric_name=win_disk.Percent_Free_Space by metric_name, host, instance span=1s\
| eval disk_used_percent=(100-disk_free_percent)\
| fields _time, host, instance, disk_used_percent, disk_free_percent
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "disk_free_percent_win", \
        "aggregate_statop": "max", \
        "entity_statop": "max", \
        "threshold_field": "disk_free_percent", \
        "title": "disk_free_percent", \
        "unit": "%"\
    }, \
    {\
        "_key": "disk_used_percent_win", \
        "aggregate_statop": "max", \
        "entity_statop": "max", \
        "threshold_field": "disk_used_percent", \
        "title": "disk_used_percent", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Storage_win.usage

[DA-ITSI-TELEGRAF-OS_Performance.Storage]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where `telegraf_index` metric_name=diskio.io_time OR metric_name=diskio.iops_in_progress OR metric_name=diskio.read_bytes OR metric_name=diskio.write_bytes OR metric_name=diskio.read_time OR metric_name=diskio.write_time OR metric_name=diskio.reads OR metric_name=diskio.writes by metric_name, host, name span=1s\
| eval {metric_name}=value\
| stats first(diskio.*) as "*_counter" by _time, host, name\
| streamstats current=f last(*_counter) as "*_prev" by host, name\
| eval io_time=((io_time_counter-io_time_prev)), iops_in_progress=((iops_in_progress_counter-iops_in_progress_prev)), read_bytes=((read_bytes_counter-read_bytes_prev)/10000000), write_bytes=((write_bytes_counter-write_bytes_prev)/10000000), read_time=(read_time_counter-read_time_prev), write_time=(write_time_counter-write_time_prev), reads=(reads_counter-reads_prev), writes=(writes_counter-writes_prev)\
| where NOT (iops_in_progress<0) AND NOT (io_time<0) AND NOT (read_bytes<0) AND NOT (write_bytes<0) AND NOT (read_time<0) AND NOT (write_time<0) AND NOT (reads<0) AND NOT (writes<0)\
| bucket _time span=1m\
| stats avg(io_time) as io_time avg(iops_in_progress) as iops_in_progress, avg(read_bytes) as read_bytes, avg(write_bytes) as write_bytes, avg(read_time) as read_time, avg(write_time) as write_time, avg(reads) as reads, avg(writes) as writes by _time, host\
| fields _time, host, io_time, iops_in_progress, read_bytes, write_bytes, read_time, write_time, reads, writes
entity_alias_filtering_fields = host
entity_id_fields = host
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "io_time_ms_of_queued_io_requests_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "io_time", \
        "title": "io_time (ms of queued io requests)", \
        "unit": "ms"\
    }, \
    {\
        "_key": "iops_in_progress_io_requested_not_yet_completed_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "iops_in_progress", \
        "title": "iops_in_progress (io requested not yet completed)", \
        "unit": "iops"\
    }, \
    {\
        "_key": "read_bytes_read_from_device_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "read_bytes", \
        "title": "read_bytes (read from device)", \
        "unit": "MB/s"\
    }, \
    {\
        "_key": "write_bytes_written_from_device_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "write_bytes", \
        "title": "write_bytes (written from device)", \
        "unit": "MB/s"\
    }, \
    {\
        "_key": "read_time_waited_for_io_requests_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "read_time", \
        "title": "read_time (waited for io requests)", \
        "unit": "ms"\
    }, \
    {\
        "_key": "write_time_waited_for_io_requests_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "write_time", \
        "title": "write_time (waited for io requests)", \
        "unit": "ms"\
    }, \
    {\
        "_key": "reads_completed_io_requests_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "reads", \
        "title": "reads (completed io requests)", \
        "unit": "iops"\
    }, \
    {\
        "_key": "writes_completed_io_requests_", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "threshold_field": "writes", \
        "title": "writes (completed io requests)", \
        "unit": "iops"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-OS
title = DA-ITSI-TELEGRAF-OS:Performance.Storage
